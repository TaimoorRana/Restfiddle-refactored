/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2015-12-01 16:19:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class middle_002dpanel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"col-xs-4 rf-col-2\">\n");
      out.write("    <br>\n");
      out.write("    <button class=\"btn btn-default btn-sm col-1-toggle-btn\">\n");
      out.write("        <i id=\"col1-toggle-icon\" class=\"fa fa-angle-double-left\"></i>\n");
      out.write("    </button>\n");
      out.write("    &nbsp;\n");
      out.write("    <div class=\"btn-group\" id=\"newRequestDropdown\">\n");
      out.write("        <button class=\"btn btn-default btn-sm\" data-toggle=\"modal\" id=\"requestBtn\">New Request</button>\n");
      out.write("        <button type=\"button\" class=\"btn btn-sm btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n");
      out.write("            <span class=\"caret\"></span> <span class=\"sr-only\">Toggle Dropdown</span>\n");
      out.write("        </button>\n");
      out.write("        <ul class=\"dropdown-menu pull-right\">\n");
      out.write("            <li><a href=\"#\" class=\"btn-sm\" data-toggle=\"modal\" data-target=\"#folderModal\">New Folder</a></li>\n");
      out.write("            <li class=\"divider\"></li>\n");
      out.write("            <li><a class=\"rf-font-12\" data-toggle=\"modal\" data-target=\"#socketModal\">New Socket</a></li>\n");
      out.write("            <li class=\"divider\"></li>\n");
      out.write("            <li><a href=\"#\" class=\"btn-sm\" data-toggle=\"modal\" data-target=\"#entityModal\">New Entity</a></li>\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("    &nbsp;\n");
      out.write("    <div class=\"btn-group\">\n");
      out.write("        <button class=\"btn btn-default btn-sm run-project\"  data-toggle=\"tooltip\" data-placement=\"bottom\" data-container=\"body\" title=\"Run project lets you run requests together.\">Run Project</button>\n");
      out.write("    </div>\n");
      out.write("    &nbsp;&nbsp;\n");
      out.write("    <div class=\"btn-group\" id=\"moreOptionsDropdown\">\n");
      out.write("        <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\">\n");
      out.write("            More&nbsp;&nbsp;<span class=\"caret\"></span>\n");
      out.write("        </button>\n");
      out.write("        <ul class=\"dropdown-menu pull-right\">\n");
      out.write("            <li><a class=\"rf-font-12\" data-toggle=\"modal\" id=\"expandAllNodes\">Expand All</a></li>\n");
      out.write("            <li><a class=\"rf-font-12\" data-toggle=\"modal\" id=\"collapseAllNodes\">Collapse All</a></li>\n");
      out.write("            <li class=\"divider\"></li>\n");
      out.write("            <li><a class=\"rf-font-12 socket-connector\">Socket</a></li>\n");
      out.write("            <li class=\"divider\"></li>\n");
      out.write("            <li><a class=\"rf-font-12\" id=\"editNodeMenuItem\">Edit Node</a></li>\n");
      out.write("            <li><a class=\"rf-font-12\" data-toggle=\"modal\" data-target=\"#deleteNodeModal\">Delete Node</a></li>\n");
      out.write("            <li class=\"divider\"></li>\n");
      out.write("            <li><a class=\"rf-font-12\" data-toggle=\"modal\" data-target=\"#importModal\">Import</a></li>\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <br> <br>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <ul class=\"nav nav-pills nav-stacked rf-left-nav\" id=\"starred-items\">\n");
      out.write("    </ul>\n");
      out.write("\n");
      out.write("    <ul class=\"nav nav-pills nav-stacked rf-left-nav\" id=\"tagged-items\">\n");
      out.write("    </ul> \n");
      out.write("\n");
      out.write("    <ul class=\"nav nav-pills nav-stacked rf-left-nav\" id=\"history-items\">\n");
      out.write("    </ul>\n");
      out.write("\n");
      out.write("    <div id=\"tree\" class=\"fancytree-colorize-hover\"></div>\n");
      out.write("    <br><br>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
